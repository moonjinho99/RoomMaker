<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper

  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rm.mapper.RoomMapper">


<insert id="makeRoom">

	insert into room(type,id) values(#{type},#{id})
</insert>

<select id="findRoomCode" resultType="int">
	select max(roomcode) from room
</select>

<insert id="makeRoomDetail">
	insert into roomdetail values(#{roomcode},#{title}, #{roompw}, #{member_cnt}, #{explanation}, #{join_member_cnt}) 
</insert>


<!-- 이미지 등록 -->
	<insert id="imageEnroll">
	
		insert into room_image(roomcode, fileName, uploadPath, uuid) values (#{roomcode}, #{fileName}, #{uploadPath}, #{uuid})
	
	</insert>
	
	<!-- 방 목록 -->
	<select id="getRoomList" resultType="com.rm.model.RoomVO">
		select r1.roomcode,type,id,title,roompw,member_cnt,join_member_cnt,explanation,fileName,uploadPath,uuid from (room r1 join roomdetail r2 on r1.roomcode = r2.roomcode) join room_image r3 on r1.roomcode = r3.roomcode order by roomcode desc
	</select>
	
	<!-- 방 조회  -->
	<select id="getRoomDetail" resultType="com.rm.model.RoomVO">
				select r1.roomcode,type,id,title,roompw,member_cnt,join_member_cnt,explanation,fileName,uploadPath,uuid from (room r1 join roomdetail r2 on r1.roomcode = r2.roomcode) join room_image r3 on r1.roomcode = r3.roomcode where r1.roomcode = #{roomcode} 
	</select>
	
	<!-- 방 갯수 출력 -->
	<select id="countRoom" resultType="int">
		select count(*) from room r1 join roomdetail r2 on r1.roomcode = r2.roomcode
		
		<if test="keyword != null">
			where title like concat('%',#{keyword},'%')
		</if>
	</select>
	
	<!-- 페이징 처리 후 방 조회 -->
	<select id="selectRoom" resultType = "com.rm.model.RoomVO">
		
		SELECT *
		FROM (
		    SELECT 
		        ROW_NUMBER() OVER (ORDER BY roomcode DESC) AS rn,
		        r1.roomcode,
		        type,
		        id,
		        title,
		        roompw,
		        member_cnt,
		        join_member_cnt,
		        explanation,
		        fileName,
		        uploadPath,
		        uuid
		    FROM room r1
		    JOIN roomdetail r2 ON r1.roomcode = r2.roomcode
		    JOIN room_image r3 ON r1.roomcode = r3.roomcode
		    <if test="keyword != null">
		    	where title like concat('%',#{keyword},'%')
		    </if>
		    ORDER BY roomcode DESC
		) AS b
		WHERE rn BETWEEN #{start} AND #{end};
		
	</select>
	
	<!-- 자료리스트의 수 -->
	<select id="countFile" resultType="int">
		select count(*) from file
	</select>
	
	<!-- 자료리스트에 뿌릴 정보 올리기 -->
	<insert id="uploadFile">
		insert into file(roomcode, filetitle, fileuploaddate, filemember) values(#{roomcode},#{filetitle}, sysdate() ,#{filemember})
	</insert>
	
	<!-- filecode 가져오기 -->
	<select id="selectFileCode" resultType="int">
		select max(filecode) from file
	</select>
	
	<!-- 자료디테일 업로드-->
	<insert id="uploadFileDetail">
		insert into filedetail values(#{filecode},#{content},#{fileName},#{uploadPath})
	</insert>
	
	<!-- 자료 리스트 정보 가져오기 -->
	<select id="getFileList" resultType="com.rm.model.FileVO">
		select * from(select ROW_NUMBER() OVER (ORDER BY filecode DESC) AS rn,
		roomcode, filecode, filetitle, fileuploaddate, filemember from file) a
		 where roomcode = #{param1} and rn BETWEEN #{param2.start} AND #{param2.end} ORDER BY fileuploaddate desc
	
	</select>
	
	<!-- 자료 디테일 가져오기-->
	<select id="getFileDetail" resultType="com.rm.model.FileVO">
		select f1.filecode,roomcode,filetitle,fileuploaddate,filemember,content,fileName,uploadPath from file f1 join filedetail f2 on f1.filecode = f2.filecode where roomcode= #{param1} and f1.filecode = #{param2}
	</select>
	
	<!-- 방 입장시 roommember에 삽입 -->
	<insert id="insertRoomMember">
		insert into roommember values(#{roomcode},#{id},#{roomlevel})
	</insert>
	
	<!-- 신규 참여자인지 아닌지 판단하기 위한 모든 참여자 가져오기 -->
	<select id="selectRoomMember" resultType="com.rm.model.RoomMemberVO">
		select * from roommember
	</select>
	
	<!-- 방 입장시 방 인원 수 증가 -->
	<update id="updateMemberCnt">
		update roomdetail set join_member_cnt = join_member_cnt + 1 where roomcode = #{roomcode}
	</update>
	
</mapper>